{"ast":null,"code":"import _regeneratorRuntime from \"/home/irfan91/Desktop/aplikasi-keuangan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/irfan91/Desktop/aplikasi-keuangan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/irfan91/Desktop/aplikasi-keuangan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/irfan91/Desktop/aplikasi-keuangan/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./styles.css\";\nexport default function App() {\n  const className = \"App\"; // const handleClick = (e) => {\n  //   console.log(\"test\");\n  // }\n\n  const title = \"IStar\"; // const description = \"Ini belajar React\";\n  // const [count , setCount] = useState(0);\n\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        post = _useState2[0],\n        setPost = _useState2[1];\n\n  const _useState3 = useState(1),\n        _useState4 = _slicedToArray(_useState3, 2),\n        postId = _useState4[0],\n        setPostId = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        isFetching = _useState6[0],\n        setIsFetching = _useState6[1];\n\n  useEffect(() => {\n    const fectPost = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var rest, postGetAPi;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              setIsFetching(true);\n              _context.next = 3;\n              return fetch(\"https://jsonplaceholder.typicode.com/posts/\".concat(postId));\n\n            case 3:\n              rest = _context.sent;\n              _context.next = 6;\n              return rest.json();\n\n            case 6:\n              postGetAPi = _context.sent;\n              console.log(postGetAPi);\n              setPost(postGetAPi);\n              setIsFetching(false);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n\n      return function fectPost() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fectPost();\n  }, [postId]); // if (isFetching) {\n  //   return <h1>LOading ....</h1>;\n  // }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      color: 'red',\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, title), isFetching && /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 22\n    }\n  }, \"LOading ....\"), !isFetching && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 8\n    }\n  }, \"Id : \", post.id), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, post.title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, post.body)), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setPostId(postId + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }\n  }, \"Next Post\"));\n}","map":{"version":3,"sources":["/home/irfan91/Desktop/aplikasi-keuangan/src/App.js"],"names":["React","useState","useEffect","App","className","title","post","setPost","postId","setPostId","isFetching","setIsFetching","fectPost","fetch","rest","json","postGetAPi","console","log","color","textAlign","id","body"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,OAAO,cAAP;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B,QAAMC,SAAS,GAAG,KAAlB,CAD4B,CAE5B;AACA;AACA;;AACA,QAAMC,KAAK,GAAE,OAAb,CAL4B,CAM5B;AAEA;;AAR4B,oBASJJ,QAAQ,CAAC,EAAD,CATJ;AAAA;AAAA,QASrBK,IATqB;AAAA,QASfC,OATe;;AAAA,qBAUAN,QAAQ,CAAC,CAAD,CAVR;AAAA;AAAA,QAUrBO,MAVqB;AAAA,QAUbC,SAVa;;AAAA,qBAWSR,QAAQ,CAAC,KAAD,CAXjB;AAAA;AAAA,QAWrBS,UAXqB;AAAA,QAWTC,aAXS;;AAY5BT,EAAAA,SAAS,CAAC,MAAM;AACb,UAAMU,QAAQ;AAAA,0EAAI;AAAA;AAAA;AAAA;AAAA;AAEhBD,cAAAA,aAAa,CAAC,IAAD,CAAb;AAFgB;AAAA,qBAGGE,KAAK,sDAA+CL,MAA/C,EAHR;;AAAA;AAGVM,cAAAA,IAHU;AAAA;AAAA,qBAIQA,IAAI,CAACC,IAAL,EAJR;;AAAA;AAIXC,cAAAA,UAJW;AAMjBC,cAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACAT,cAAAA,OAAO,CAACS,UAAD,CAAP;AACAL,cAAAA,aAAa,CAAC,KAAD,CAAb;;AARiB;AAAA;AAAA;AAAA;AAAA;AAAA,OAAJ;;AAAA,sBAARC,QAAQ;AAAA;AAAA;AAAA,OAAd;;AAYCA,IAAAA,QAAQ;AACX,GAdQ,EAcN,CAACJ,MAAD,CAdM,CAAT,CAZ4B,CA4B5B;AACA;AACA;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEJ,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,KAAK,EAAE;AAACe,MAAAA,KAAK,EAAG,KAAT;AAAgBC,MAAAA,SAAS,EAAC;AAA1B,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCf,KADD,CADF,EAcGK,UAAU,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAdjB,EAeG,CAACA,UAAD,iBACD,uDACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAUJ,IAAI,CAACe,EAAf,CADD,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKf,IAAI,CAACD,KAAV,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIC,IAAI,CAACgB,IAAT,CAHF,CAhBF,eAwBD;AAAQ,IAAA,OAAO,EAAE,MAAMb,SAAS,CAACD,MAAM,GAAE,CAAT,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAxBC,CADF;AA4BD","sourcesContent":["import React , {useState , useEffect} from \"react\";\nimport \"./styles.css\";\n\nexport default function App() { \n  const className = \"App\";\n  // const handleClick = (e) => {\n  //   console.log(\"test\");\n  // }\n  const title =\"IStar\";\n  // const description = \"Ini belajar React\";\n\n  // const [count , setCount] = useState(0);\n  const [post, setPost] = useState({});\n  const [postId, setPostId] = useState(1);\n  const [isFetching, setIsFetching] =  useState(false);\n  useEffect(() => {\n     const fectPost =  async () => {\n\n       setIsFetching(true);\n       const rest = await fetch(`https://jsonplaceholder.typicode.com/posts/${postId}`);\n      const postGetAPi = await rest.json();\n\n      console.log(postGetAPi);\n      setPost(postGetAPi);\n      setIsFetching(false);\n     \n      };\n\n      fectPost();\n  }, [postId]);\n\n  // if (isFetching) {\n  //   return <h1>LOading ....</h1>;\n  // }\n\n  return (\n    <div className={className}>\n      <h1 style={{color : 'red', textAlign:\"center\"}}>\n      {title}</h1>\n\n      {/* {isFetching ? (\n        <h1>LOading ....</h1>\n      ) :(\n        <>\n        <h2>Id : {post.id}</h2>\n        <h2>{post.title}</h2>\n        <p>{post.body}</p>\n        </>\n      )} */}\n\n      {isFetching && <h1>LOading ....</h1>}\n      {!isFetching && \n      <>\n       <h2>Id : {post.id}</h2>\n        <h2>{post.title}</h2>\n        <p>{post.body}</p>\n\n      </>\n      }\n    \n   <button onClick={() => setPostId(postId+ 1)}>Next Post</button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}