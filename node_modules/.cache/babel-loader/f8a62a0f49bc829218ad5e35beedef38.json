{"ast":null,"code":"import _regeneratorRuntime from \"/home/irfan91/Desktop/aplikasi-keuangan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/irfan91/Desktop/aplikasi-keuangan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/irfan91/Desktop/aplikasi-keuangan/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/irfan91/Desktop/aplikasi-keuangan/src/scenes/private/pengaturan/pengguna.js\";\nimport React, { useRef, useState } from 'react'; //material -ui \n\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\"; //  firebase hook\n\nimport { useFirebase } from \"../../../components/FirebaseProvider\"; //import notifikasi\n\nimport { useSnackbar } from 'notistack'; //import validator\n\nimport isEmail from 'validator/lib/isEmail'; //import style\n\nimport useStyles from './style/pengguna';\nexport default function Pengguna() {\n  const _useFirebase = useFirebase(),\n        user = _useFirebase.user;\n\n  const _useState = useState({\n    displayName: '',\n    email: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        error = _useState2[0],\n        setError = _useState2[1];\n\n  const classes = useStyles();\n  const displayNameRef = useRef();\n  const emailRef = useRef();\n  const passwordRef = useRef();\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isSubmitting = _useState4[0],\n        setSubmitting = _useState4[1];\n\n  const _useSnackbar = useSnackbar(),\n        enqueueSnackbar = _useSnackbar.enqueueSnackbar;\n\n  const saveDisplayName = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var displayName;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            displayName = displayNameRef.current.value;\n            console.log(displayName);\n\n            if (displayName) {\n              _context.next = 6;\n              break;\n            }\n\n            setError({\n              displayName: \"Nama harus diisi !\"\n            });\n            _context.next = 13;\n            break;\n\n          case 6:\n            if (!(displayName !== user.displayName)) {\n              _context.next = 13;\n              break;\n            }\n\n            setError({\n              displayName: ''\n            });\n            setSubmitting(true);\n            _context.next = 11;\n            return user.updateProfile({\n              displayName\n            });\n\n          case 11:\n            setSubmitting(false);\n            enqueueSnackbar('Data pengguna berhasil diupdate', {\n              variant: 'success'\n            });\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function saveDisplayName(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  const updateEmail = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n      var email, emailError;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            email = emailRef.current.value;\n\n            if (email) {\n              _context2.next = 5;\n              break;\n            }\n\n            setError({\n              email: 'Email harus diisi !'\n            });\n            _context2.next = 34;\n            break;\n\n          case 5:\n            if (isEmail(email)) {\n              _context2.next = 9;\n              break;\n            }\n\n            setError({\n              email: 'Email tidak valid'\n            });\n            _context2.next = 34;\n            break;\n\n          case 9:\n            if (!(email !== user.email)) {\n              _context2.next = 34;\n              break;\n            }\n\n            setError({\n              email: ''\n            });\n            setSubmitting(true);\n            _context2.prev = 12;\n            _context2.next = 15;\n            return user.updateEmail(email);\n\n          case 15:\n            enqueueSnackbar(\"Email berhasil diupdate \", {\n              variant: 'success'\n            });\n            _context2.next = 33;\n            break;\n\n          case 18:\n            _context2.prev = 18;\n            _context2.t0 = _context2[\"catch\"](12);\n            emailError = '';\n            _context2.t1 = _context2.t0.code;\n            _context2.next = _context2.t1 === 'auth/email-already-in-use' ? 24 : _context2.t1 === 'auth/invalid-email' ? 26 : _context2.t1 === 'auth/requires-recent-login' ? 28 : 30;\n            break;\n\n          case 24:\n            emailError = \"Email sudah digunakan user lain\";\n            return _context2.abrupt(\"break\", 32);\n\n          case 26:\n            emailError = \"Email tidak valid\";\n            return _context2.abrupt(\"break\", 32);\n\n          case 28:\n            emailError = \"Silahkan logout kemudian login kembali untuk update email\";\n            return _context2.abrupt(\"break\", 32);\n\n          case 30:\n            emailError = _context2.t0.message;\n            return _context2.abrupt(\"break\", 32);\n\n          case 32:\n            setError({\n              email: emailError\n            });\n\n          case 33:\n            setSubmitting(false);\n\n          case 34:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2, null, [[12, 18]]);\n    }));\n\n    return function updateEmail(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  const sendEmailVerification = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(e) {\n      var actionCodeSettings;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            actionCodeSettings = {\n              url: \"\".concat(window.location.origin, \"/login\")\n            };\n            setSubmitting(true);\n            _context3.next = 4;\n            return user.sendEmailVerification(actionCodeSettings);\n\n          case 4:\n            enqueueSnackbar(\"Email verifikasi berhasil dikirim ke \".concat(emailRef.current.value), {\n              variant: \"success\"\n            });\n            setSubmitting(false);\n\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    }));\n\n    return function sendEmailVerification(_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  const updatePassword = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(e) {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4);\n    }));\n\n    return function updatePassword(_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.pengaturanPengguna,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"displayName\",\n    name: \"displayName\",\n    label: \"Nama\",\n    margin: \"normal\",\n    defaultValue: user.displayName,\n    inputProps: {\n      ref: displayNameRef,\n      onBlur: saveDisplayName\n    },\n    disabled: isSubmitting,\n    helperText: error.displayName,\n    error: error.displayName ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"email\",\n    name: \"email\",\n    label: \"Email\",\n    type: \"email\",\n    margin: \"normal\",\n    defaultValue: user.email,\n    inputProps: {\n      ref: emailRef,\n      onBlur: updateEmail\n    },\n    disabled: isSubmitting,\n    helperText: error.email,\n    error: error.email ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }), user.emailVerified ? /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  }, \"Email sudah terverifikasi\") : /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    onClick: sendEmailVerification,\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }, \"Kirim email verifikasi\"), /*#__PURE__*/React.createElement(TextField, {\n    id: \"password\",\n    name: \"password\",\n    type: \"password\",\n    label: \"Password Baru\",\n    inputProps: {\n      ref: passwordRef,\n      onBlur: updatePassword\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/home/irfan91/Desktop/aplikasi-keuangan/src/scenes/private/pengaturan/pengguna.js"],"names":["React","useRef","useState","TextField","Button","Typography","useFirebase","useSnackbar","isEmail","useStyles","Pengguna","user","displayName","email","error","setError","classes","displayNameRef","emailRef","passwordRef","isSubmitting","setSubmitting","enqueueSnackbar","saveDisplayName","e","current","value","console","log","updateProfile","variant","updateEmail","emailError","code","message","sendEmailVerification","actionCodeSettings","url","window","location","origin","updatePassword","pengaturanPengguna","ref","onBlur","emailVerified"],"mappings":"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","sourcesContent":["import React,{useRef, useState} from 'react'\n\n//material -ui \nimport TextField from '@material-ui/core/TextField'\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\n//  firebase hook\nimport { useFirebase } from \"../../../components/FirebaseProvider\";\n\n//import notifikasi\nimport {useSnackbar} from 'notistack'\n\n//import validator\nimport isEmail from 'validator/lib/isEmail'\n\n//import style\nimport useStyles from './style/pengguna'\n\nexport default function Pengguna() {\n\n    const { user } = useFirebase();\n    const [error, setError] = useState({\n        displayName : '',\n        email : ''\n\n    });\n\n    const classes = useStyles();\n\n    const displayNameRef =  useRef();\n    const emailRef =  useRef();\n    const passwordRef =  useRef();\n\n    const [isSubmitting, setSubmitting] = useState(false);\n    const {enqueueSnackbar} = useSnackbar();\n    const saveDisplayName = async (e)=>{\n        const displayName = displayNameRef.current.value;\n        console.log(displayName)\n\n        if (!displayName) {\n            setError({\n                displayName : \"Nama harus diisi !\"\n            })\n        } else if(displayName !== user.displayName){\n\n            setError({\n                displayName : ''\n            })\n\n            setSubmitting(true);\n            await user.updateProfile({\n                displayName\n            });\n            setSubmitting(false);\n            enqueueSnackbar('Data pengguna berhasil diupdate', {variant : 'success'});\n        }\n\n       \n    }\n\n    const updateEmail = async (e)=>{\n        const email = emailRef.current.value;\n\n        if (!email) {\n            setError({\n                email : 'Email harus diisi !'\n            })\n        } else if(!isEmail(email)) {\n\n            setError({\n                email : 'Email tidak valid'\n            })\n        } else if(email !== user.email){\n\n\n            setError({\n                email : ''\n            })\n\n            setSubmitting(true);\n           \n            try {\n\n                await user.updateEmail(email);\n                enqueueSnackbar(\"Email berhasil diupdate \", {variant:'success'});\n\n            } catch(e){\n               \n                let emailError = '';\n\n                switch (e.code) {\n                    case 'auth/email-already-in-use':\n                        emailError=\"Email sudah digunakan user lain\";\n                        break;\n\n                    case 'auth/invalid-email':\n                        emailError=\"Email tidak valid\";\n                        break;\n\n                     case 'auth/requires-recent-login':\n                        emailError=\"Silahkan logout kemudian login kembali untuk update email\";\n                        break;\n                \n                    default:\n                        emailError= e.message;\n                        break;\n                }\n\n                setError({\n                    email : emailError\n                })\n\n            }\n\n            setSubmitting(false);\n        }\n    }\n\n\n    const sendEmailVerification = async (e)=>{\n\n        const actionCodeSettings ={\n            url : `${window.location.origin}/login`\n        };\n\n        setSubmitting(true);\n        await user.sendEmailVerification(actionCodeSettings);\n        enqueueSnackbar(`Email verifikasi berhasil dikirim ke ${emailRef.current.value}`,{variant : \"success\"});\n\n        setSubmitting(false);\n\n    }\n\n    const updatePassword = async (e)=>{\n        \n    }\n\n    return (\n        <div className={classes.pengaturanPengguna}>\n            <TextField \n                id=\"displayName\"\n                name=\"displayName\"\n                label=\"Nama\"\n                margin=\"normal\"\n                defaultValue={user.displayName}\n                inputProps={{\n                    ref : displayNameRef,\n                    onBlur: saveDisplayName,\n                }}\n                disabled={isSubmitting}\n                helperText={error.displayName}\n                error={error.displayName ? true : false}\n            />\n\n            <TextField \n                id=\"email\"\n                name =\"email\"\n                label = \"Email\"\n                type=\"email\"\n                margin=\"normal\"\n                defaultValue={user.email}\n                inputProps={{\n                    ref : emailRef,\n                    onBlur: updateEmail,\n                }}\n                disabled={isSubmitting}\n                helperText={error.email}\n                error={error.email ? true : false}\n\n            />\n            {\n                user.emailVerified?\n                <Typography variant=\"subtitle1\" color=\"primary\">\n                    Email sudah terverifikasi\n                </Typography>\n                :\n                <Button\n                variant=\"outlined\"\n                onClick={sendEmailVerification}\n                disabled={isSubmitting}\n                >\n                    Kirim email verifikasi\n                </Button>\n            }\n            <TextField \n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                label=\"Password Baru\"\n                inputProps={{\n                    ref :passwordRef,\n                    onBlur: updatePassword\n                }}\n            \n            />\n\n          \n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}